#created on: Apr 5, 2010
package org.jcvi.annotation.rules.genomeproperties
import org.jcvi.annotation.facts.*;

rule "Assign GenomeProperty on the genome whenever one of its features has the property"
	when
		p				: GenomeProperty()
		f				: Feature( properties contains p, genome : genome )
		g				: Genome( this == genome, properties not contains p )
	then 
		modify( g ) { addProperty(p) };
end

rule "sufficient for Property rule"
	when
		relationship	: PropertyRelationship(
							prop1: 	subject, 
							type == RelationshipType.SUFFICIENT_FOR, 
							prop2: 	object )
		feature			: Feature( properties contains prop1, properties not contains prop2  )
			
	then 
		//System.out.println("Sufficent Rule: assigns property " + prop2.toString() + " based on Property on Genome " + prop1.getId());
		modify( prop2 ) { setValue(1.0) };
		modify( feature ) { addProperty(prop2) };
end

rule "sufficient for GenomeProperty rule"	
	when
		prop2			: GenomeProperty()
		relationship	: PropertyRelationship(
							prop1: 	subject, 
							type == RelationshipType.SUFFICIENT_FOR, 
							object == prop2 )
		genome			: Genome( properties contains prop1 && not contains prop2 )
	then 
		//System.out.println("Sufficent Rule: assigns genomeprop " + prop2.getId() + " based on Property on Genome " + prop1.getId());
		modify( prop2 ) 	{ setValue(1.0) };
		modify( genome ) 	{ addProperty(prop2) };
end

