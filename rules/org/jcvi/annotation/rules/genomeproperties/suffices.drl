#created on: Apr 5, 2010
package org.jcvi.annoation.rules.genomeproperties
import org.jcvi.annotation.facts.*;

rule "Property sufficient_for FeatureProperty"
	when
		relationship	: PropertyRelationship(
							prop1: 	subject, 
							type == RelationshipType.SUFFICIENT_FOR, 
							prop2: 	object )
		feature			: Feature( properties contains prop1,
								properties not contains prop2 )
	
	then 
		System.out.println("Assigning prop " + prop2.toString());
		modify( prop2 ) { setValue(1) };
		modify( feature ) { addProperty(prop2) };
end
	
rule "Property (on Feature) sufficient_for GenomeProperty"
	when
		prop2			: GenomeProperty()
		relationship	: PropertyRelationship(
							prop1: 	subject, 
							type == RelationshipType.SUFFICIENT_FOR, 
							object == prop2 )
		feature			: Feature( properties contains prop1, 
									properties not contains prop2,
									genome : genome )
	
	then 
		System.out.println("Assigning genomeprop " + prop2.toString());
		modify( prop2 ) 	{ setValue(1) };
		modify( feature ) 	{ addProperty(prop2) };
		modify( genome ) 	{ addProperty(prop2) };
end

rule "Property (on Genome) sufficient_for GenomeProperty"	
	when
		prop2			: GenomeProperty()
		relationship	: PropertyRelationship(
							prop1: 	subject, 
							type == RelationshipType.SUFFICIENT_FOR, 
							object == prop2 )
		genome			: Genome( properties contains prop1,
									properties not contains prop2 )
	then 
		System.out.println("Assigning genomeprop " + prop2.toString());
		modify( prop2 ) 	{ setValue(1) };
		modify( genome ) 	{ addProperty(prop2) };
end

