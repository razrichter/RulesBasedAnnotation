#created on: Apr 6, 2010
package org.jcvi.annotation.rules.genomeproperties
import org.jcvi.annotation.facts.*;
import java.util.ArrayList;

rule "GenomeProperty value calculation"
//lock-on-active true
	when
		genomeprop	 		: GenomeProperty()
		requiredRelations	: ArrayList()
				from collect( PropertyRelationship( type == RelationshipType.REQUIRED_BY, object == genomeprop ) )		
		numFilledComponents	: Double() 
				from accumulate(  r : PropertyRelationship()
					from requiredRelations,
				sum( r.getSubject().getValue() ) )
		eval( genomeprop.get("filled") != numFilledComponents )
		

 	then 
		double numRequiredComponents = new Double(requiredRelations.size());
		double fractionFilledComponents = (numRequiredComponents == 0) ? 0
								: numFilledComponents / numRequiredComponents;
  		//if (numFilledComponents > 0) {
	  		System.out.println(numFilledComponents + "/" +
	  				numRequiredComponents + " = " +
	  				fractionFilledComponents + " " + 
	  				genomeprop.toString());
   		//}

		genomeprop.put("required", numRequiredComponents);
		genomeprop.put("filled", numFilledComponents);
		genomeprop.setValue(fractionFilledComponents);
		
		// modify( genomeprop ) {
			// put("required", numRequiredComponents),
			// put("filled", numFilledComponents),
			// setValue(fractionFilledComponents)
		// };
 end
