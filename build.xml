<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="RulesBasedAnnotation">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../software/eclipse-jee-galileo-SR1-win32/eclipse"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <path id="Drools Library.libraryclasspath">
        <pathelement location="../../../software/drools-5.0/drools-ant-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-api-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-bam-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-clips-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-compiler-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-core-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-decisiontables-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-jsr94-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-mc-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-messenger-jms-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-persistence-jpa-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-process-task-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-templates-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-transformer-jaxb-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-transformer-jxls-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-transformer-smooks-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-transformer-xstream-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-verifier-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/drools-workitems-5.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/activation-1.1.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/activemq-core-5.2.0.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/ant-1.6.5.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/ant-nodeps-1.6.5.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/antlr-runtime-3.1.1.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/commons-collections-3.2.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/commons-compress-1.0-20080905.032625-1.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/commons-exec-1.0.0-20080905.033237-1.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/commons-finder-1.0-20080905.033643-1.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/commons-io-1.4.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/commons-net-2.0.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/core-3.4.2.v_883_R34x.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/dom4j-1.6.1.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/h2-1.0.77.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/hibernate-annotations-3.4.0.GA.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/hibernate-commons-annotations-3.1.0.GA.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/hibernate-core-3.3.0.SP1.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/hibernate-entitymanager-3.4.0.GA.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/janino-2.5.15.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/javassist-3.4.GA.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/jaxb-impl-2.0.3.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/jaxb-xjc-2.0.3.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/jboss-seam-2.1.1.GA.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/jboss-vfs-2.0.0.GA.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/jettison-1.0.1.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/joda-time-1.6.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/jsr94-1.1.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/jta-1.0.1B.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/jxl-2.4.2.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/jxls-reader-0.9.6.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/mail-1.4.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/milyn-smooks-javabean-1.1.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/mina-core-2.0.0-M3.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/mvel2-2.0.10.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/persistence-api-1.0.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/rome-0.9.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/simple-jndi-0.11.4.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/slf4j-api-1.5.2.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/slf4j-api-1.5.6.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/slf4j-jdk14-1.5.2.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/smack-3.0.4.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/stax-1.2.0.jar"/>
        <pathelement location="../../../software/drools-5.0/lib/xstream-1.3.1.jar"/>
    </path>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.junit4_4.5.0.v20090824/junit.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.hamcrest.core_1.1.0.v20090501071000.jar"/>
    </path>
    <path id="RulesBasedAnnotation.classpath">
        <pathelement location="bin"/>
        <path refid="Drools Library.libraryclasspath"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="lib/biojava.jar"/>
        <pathelement location="lib/commons-cli-1.2.jar"/>
        <pathelement location="lib/jconn3.jar"/>
        <pathelement location="lib/jena-2.6.2/arq-2.8.1.jar"/>
        <pathelement location="lib/jena-2.6.2/icu4j-3.4.4.jar"/>
        <pathelement location="lib/jena-2.6.2/iri-0.7.jar"/>
        <pathelement location="lib/jena-2.6.2/jena-2.6.2.jar"/>
        <pathelement location="lib/jena-2.6.2/stax-api-1.0.1.jar"/>
        <pathelement location="lib/jena-2.6.2/wstx-asl-3.2.9.jar"/>
        <pathelement location="lib/jena-2.6.2/xercesImpl-2.7.1.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.g"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="tests">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.g"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="rules">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.g"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="tests"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="rules"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="Aruba">
        <java classname="org.jcvi.annotation.Aruba" failonerror="true" fork="yes">
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </java>
    </target>
    <target name="GenbankFormatTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.biojavax.bio.seq.io.GenbankFormatTest" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="GenomeProperties (1)">
        <java classname="org.jcvi.annotation.GenomeProperties" failonerror="true" fork="yes">
            <arg line="gb6"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </java>
    </target>
    <target name="ParseOBOFileTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.biojava.ontology.ParseOBOFileTest" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="RulesBasedAnnotationTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.biojava.ontology.ParseOBOFileTest" todir="${junit.output.dir}"/>
            <test name="org.biojavax.bio.seq.io.GenbankFormatTest" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.dao.TestBlastResultFileDAO" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.dao.TestGenbankFeatureDAO" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.dao.TestHmmCutoffTableDAO" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.dao.TestNCBITaxonomyDAO" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.dao.TestRDFFileDAO" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.dao.TestRdfFactDAO" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.dao.TestSmallGenomeAnnotationDAO" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.dao.TestSmallGenomeDAO" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.dao.TestSmallGenomeHmmHitDAO" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.dao.TestSmallGenomePropertyDAO" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.dao.TestSmallGenomeTaxonomyDAO" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.rules.genomeproperties.TestGenomeProperty_66644" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.rules.genomeproperties.TestHasSufficientButNotRequiredGenomeProperty" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.rulesengine.TestBlastHitWithTaxonomyRestriction" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.rulesengine.TestBlastPHitNearBlastPHitRule" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.rulesengine.TestBlastPHitRule" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.rulesengine.TestGenomeProperty" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.rulesengine.TestGoAnnotationRule" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.rulesengine.TestHmmHitRule" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.rulesengine.TestRuleTranslator" todir="${junit.output.dir}"/>
            <test name="org.jcvi.annotation.rulesengine.TestSampleGenericPropertyRule" todir="${junit.output.dir}"/>
            <test name="org.jcvi.sample.TestSimpleInference" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="RunGP">
        <java classname="org.jcvi.annotation.RunGP" failonerror="true" fork="yes">
            <arg line="gb6"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </java>
    </target>
    <target name="TestBlastHitWithTaxonomyRestriction">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rulesengine.TestBlastHitWithTaxonomyRestriction" todir="${junit.output.dir}"/>
            <jvmarg line="-Xms128m -Xmx512m"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestBlastHitWithTaxonomyRestriction.SKIPtestDsl">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rulesengine.TestBlastHitWithTaxonomyRestriction" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestBlastHitWithTaxonomyRestriction.testDsl">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rulesengine.TestBlastHitWithTaxonomyRestriction" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestBlastHitWithTaxonomyRestriction.testGetTaxon">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rulesengine.TestBlastHitWithTaxonomyRestriction" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestBlastHitWithTaxonomyRestriction.testSampleBlastCommonName">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rulesengine.TestBlastHitWithTaxonomyRestriction" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestBlastPHitNearBlastPHitRule">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rulesengine.TestBlastPHitNearBlastPHitRule" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestBlastPHitRule">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rulesengine.TestBlastPHitRule" todir="${junit.output.dir}"/>
            <jvmarg line="-Xms128m&#13;&#10;-Xmx512m"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestBlastPHitRule.testSampleBlastCommonName">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rulesengine.TestBlastPHitRule" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestBlastResultFileDAO">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestBlastResultFileDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestBufferedReader">
        <java classname="org.jcvi.annotation.dao.TestBufferedReader" failonerror="true" fork="yes">
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </java>
    </target>
    <target name="TestGenbankFeatureDAO">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestGenbankFeatureDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestGenomeProperty">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rulesengine.TestGenomeProperty" todir="${junit.output.dir}"/>
            <jvmarg line="-Xms128m -Xmx512m"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestGenomeProperty_66644">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rules.genomeproperties.TestGenomeProperty_66644" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestGoAnnotationRule">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rulesengine.TestGoAnnotationRule" todir="${junit.output.dir}"/>
            <jvmarg line="-Xms128m&#13;&#10;-Xmx512m"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestHasSufficientButNotRequiredGenomeProperty">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rules.genomeproperties.TestHasSufficientButNotRequiredGenomeProperty" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestHmmCutoffTableDAO">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestHmmCutoffTableDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestHmmHitRule">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rulesengine.TestHmmHitRule" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestNCBITaxonomyDAO.HOLDtestTaxonomyDao">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestNCBITaxonomyDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestNCBITaxonomyDAO.HOLD_testLoadTaxonomy">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestNCBITaxonomyDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestNCBITaxonomyDAO">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestNCBITaxonomyDAO" todir="${junit.output.dir}"/>
            <jvmarg line="-Xms128m -Xmx512m"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestNCBITaxonomyDAO.MEM_testSetParents">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestNCBITaxonomyDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestNCBITaxonomyDAO.PROBtestSetParents">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestNCBITaxonomyDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestNCBITaxonomyDAO.testGetParents2">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestNCBITaxonomyDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestNCBITaxonomyDAO.testLoadTaxonomy">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestNCBITaxonomyDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestNCBITaxonomyDAO.testSetParents">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestNCBITaxonomyDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestNCBITaxonomyDAO.WORKINGtestTaxonomyDao">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestNCBITaxonomyDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestRdfFactDAO">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestRdfFactDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestRDFFileDAO">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestRDFFileDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestRuleTranslator">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rulesengine.TestRuleTranslator" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestSampleGenericPropertyRule">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.rulesengine.TestSampleGenericPropertyRule" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestSimpleInference">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.sample.TestSimpleInference" todir="${junit.output.dir}"/>
            <jvmarg line="-Xms128m&#13;&#10;-Xmx512m"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestSmallGenomeAnnotationDAO">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestSmallGenomeAnnotationDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestSmallGenomeAnnotationDAO.testGetAnnotationGoIds">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestSmallGenomeAnnotationDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestSmallGenomeDAO">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestSmallGenomeDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestSmallGenomeHmmHitDAO">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestSmallGenomeHmmHitDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="TestSmallGenomePropertyDAO">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.jcvi.annotation.dao.TestSmallGenomePropertyDAO" todir="${junit.output.dir}"/>
            <classpath refid="RulesBasedAnnotation.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
